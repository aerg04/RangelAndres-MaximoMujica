/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto.proyecto2;

import App.ReadExcel;
import App.SearchCurrentClient;
import App.SearchRecordBooking;
import App.SearchRoom;
import primitivas.Binary_Tree;
import primitivas.HashTable;
import javax.swing.JOptionPane;
import primitivas.*;

/**
 *
 * @author DELL
 */
public class W1 extends javax.swing.JFrame {
        HashTable rooms;
        HashTable aux_record;
        HashTable current_clients;
        Binary_Tree bookings;
        Binary_Tree record;
        boolean confirmation = true;
        
        SearchRecordBooking app_record = new SearchRecordBooking();
        SearchCurrentClient app_current = new SearchCurrentClient();
        ReadExcel readexcel = new ReadExcel();
        SearchRoom searchroom = new SearchRoom();

    /**
     * Creates new form W1
     */
    public W1() {
        
        
    }

    public W1(HashTable rooms, HashTable aux_record, HashTable current_clients, Binary_Tree bookings, Binary_Tree record) {
        initComponents();
        this.rooms = rooms;
        this.aux_record = aux_record;
        this.current_clients = current_clients;
        this.bookings = bookings;
        this.record = record;
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.jTextArea1.setText("NO HAY CONTENIDO CARGADO");

//        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        LoadData = new javax.swing.JButton();
        CheckIn = new javax.swing.JButton();
        CheckOut = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        SearchCClient = new javax.swing.JButton();
        Cerrar = new javax.swing.JButton();
        Record = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 330, 360));

        LoadData.setText("Cargar datos");
        LoadData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadDataActionPerformed(evt);
            }
        });
        jPanel1.add(LoadData, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 150, 30));

        CheckIn.setText("Check-In");
        CheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckInActionPerformed(evt);
            }
        });
        jPanel1.add(CheckIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 150, 30));

        CheckOut.setText("Check-Out");
        CheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckOutActionPerformed(evt);
            }
        });
        jPanel1.add(CheckOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 150, 30));

        jButton4.setText("Buscar reservación");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 150, 30));

        SearchCClient.setText("Buscar cliente");
        SearchCClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchCClientActionPerformed(evt);
            }
        });
        jPanel1.add(SearchCClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 150, 30));

        Cerrar.setText("Cerrar");
        Cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarActionPerformed(evt);
            }
        });
        jPanel1.add(Cerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 430, 100, -1));

        Record.setText("Historial");
        Record.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecordActionPerformed(evt);
            }
        });
        jPanel1.add(Record, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 390, 150, 30));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel1.setText("Menu");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 240, 30));
        jLabel1.getAccessibleContext().setAccessibleDescription("");

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecordActionPerformed
        // TODO add your handling code here:
        String room_str = JOptionPane.showInputDialog("Ingrese el cuarto");
        if(room_str != null){
            if(readexcel.isNumeric(room_str.replace(" ", "").toLowerCase())){
                this.jTextArea1.setText("\n -----Información de la reservacion ----- \n" + app_record.searchRecord(Integer.parseInt(room_str), record));
            }else{
                JOptionPane.showMessageDialog(rootPane, "el cuarto no existe");   
            }
            
        }
    }//GEN-LAST:event_RecordActionPerformed

    private void LoadDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadDataActionPerformed
        // TODO add your handling code here:
        if(confirmation){
            readexcel.ReadFile(current_clients, aux_record, rooms, bookings);
            app_record.convertHashTable(aux_record, record);
            searchroom.setRoomDatabase(current_clients,rooms );
            confirmation = false;
            jTextArea1.setText("INFORMACIÓN CARGADA EXITOSAMENTE");
            
        }else{
            int con = JOptionPane.showConfirmDialog(null,
                                 "si vuelve a cargar los datos perdera el contenido actual, ¿volver a cargar?", "confirmar",
                                 JOptionPane.YES_NO_OPTION);
            if(con == 0){
                readexcel.ReadFile(current_clients, aux_record, rooms, bookings);
                app_record.convertHashTable(aux_record, record);
                searchroom.setRoomDatabase(current_clients,rooms );
                confirmation = false;
                jTextArea1.setText("INFORMACIÓN CARGADA EXITOSAMENTE");
            }
        }
    }//GEN-LAST:event_LoadDataActionPerformed

    private void CheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckInActionPerformed
        // TODO add your handling code here:
        String id_str = JOptionPane.showInputDialog("Ingrese ID del cliente");
        if(id_str != null){
            if(readexcel.isNumeric(id_str.replace(".", "").replace(" ", ""))){
                int id = Integer.parseInt(id_str.replace(".", "").replace(" ", ""));
                Booking booking  = app_record.searchBooking(id, bookings);
                if(booking != null){
                    int room_id = searchroom.searchRoom(booking.getType(), rooms);
                    if(room_id != -1){
                        Room room_aux = searchroom.getRoomAt(room_id, rooms);
                        bookings.delete(id);
                        CurrentClient newclient = new CurrentClient((room_id+1)+"", booking.getFirst_name(),
                                                                    booking.getLast_name(), booking.getEmail(), 
                                                                    booking.getGender(), booking.getCellphone(), booking.getArrival());
                        app_current.insertHashTable(booking.getLast_name()+booking.getFirst_name(), newclient, current_clients);
                        searchroom.getRoomAt(room_id, rooms).setDisponibility(false);
                        this.jTextArea1.setText("Check-In exitoso \n ---------Información de la reservacion -------- \n" + booking.showAttributes()  + "\n -----Información del cuerto----- \n" + room_aux.showAttributes());
                    }else{  
                        JOptionPane.showMessageDialog(rootPane, "\n --------------------\n No hay cuartos disponibles del tipo:  "+ booking.getType() +" \n --------------------\n");
                    }
                    
                }else{
                    JOptionPane.showMessageDialog(rootPane, "reservacion no existe");
                    
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "error al ingresar la cedula");
            }
        }
    }//GEN-LAST:event_CheckInActionPerformed

    private void CheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckOutActionPerformed
        // TODO add your handling code here:
        String lastfirtsname = JOptionPane.showInputDialog("Ingrese el apellido y el nombre");
        if(lastfirtsname != null){
            CurrentClient client = app_current.getInfoClient(lastfirtsname.replace(" ", "").toLowerCase(), current_clients);
            if( client != null){
                ClientRecord record_client = new ClientRecord(client.getId(),client.getFirst_name(),client.getLast_name(),
                client.getEmail(), client.getGender(),client.getArrival(),client.getRoom());
                searchroom.getRoomAt(Integer.parseInt(record_client.getRoom())-1, rooms).setDisponibility(false);
                app_record.insertClientRecord(Integer.parseInt(record_client.getRoom()), record_client, record);
                this.jTextArea1.setText( "Check-Out exitoso \n " + app_record.searchRecord(Integer.parseInt(record_client.getRoom()), record));
            }else{
                JOptionPane.showMessageDialog(rootPane, "el cliente no se encuentra alojado");   
            }
            
        }
    }//GEN-LAST:event_CheckOutActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String id_str = JOptionPane.showInputDialog("Ingrese ID del cliente");
        if(id_str != null){
            if(readexcel.isNumeric(id_str.replace(".", "").replace(" ", ""))){
                int id = Integer.parseInt(id_str.replace(".", "").replace(" ", ""));
                Booking booking  = app_record.searchBooking(id, bookings);
                if(booking != null){
                    this.jTextArea1.setText("\n -------Información de la reservacion ------- \n" + booking.showAttributes());
                    
                }else{
                    JOptionPane.showMessageDialog(rootPane, "reservacion no existe");
                    
                }
                
            }else{
                
                JOptionPane.showMessageDialog(rootPane, "error al ingresar la cedula");
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void SearchCClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchCClientActionPerformed
        // TODO add your handling code here:
        String lastfirtsname = JOptionPane.showInputDialog("Ingrese el apellido y el nombre");
        if(lastfirtsname != null){
            CurrentClient client = app_current.getInfoClient(lastfirtsname.replace(" ", "").toLowerCase(), current_clients);
            if( client != null){
                this.jTextArea1.setText("\n -----datos del cliente----- \n" + client.showAttributes());
            }else{
                JOptionPane.showMessageDialog(rootPane, "el cliente no se encuentra alojado");   
            }
            
        }
    }//GEN-LAST:event_SearchCClientActionPerformed

    private void CerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_CerrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(W1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(W1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(W1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(W1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new W1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cerrar;
    private javax.swing.JButton CheckIn;
    private javax.swing.JButton CheckOut;
    private javax.swing.JButton LoadData;
    private javax.swing.JButton Record;
    private javax.swing.JButton SearchCClient;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
